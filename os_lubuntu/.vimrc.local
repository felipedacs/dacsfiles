"==================================================================================
"removidos
"=================================================================================
"nerdtree
"

set autochdir
set nobk		    	    " Don't create backup files
set ignorecase              "Ignora uppercase nas pesquisas com /search
set cursorline
set ai                      "auto indentação -> ==
set number                  "numero da linha atual
set relativenumber          "distancias entre a linha do cursor
set mouse=a                 "libera uso do mouse em todos modos

" visual
syntax on
set nocompatible    " enter the current millenium
set termguicolors
colorscheme dracula
set ruler
set number

"delay entre atalhos
set ttimeout
set ttimeoutlen=100
set timeoutlen=3000

"j e k mantem cursor no meio do arquivo
nnoremap j jzz
nnoremap k kzz

"" Execuções
nnoremap <leader>py <Esc>:w<CR>:!clear;python3 %<CR>
nnoremap <leader>gr <Esc>:w<CR>:!clear;go run %<CR>
nnoremap <leader>gc <Esc>:w<CR>:!clear;gcc % -o executavel ; ./executavel ; rm executavel<CR>

":h add-local-help
":h write-local-help
":h dacs
helptags ~/.vim/doc
command Dacs execute ":h dacs"
":dacs"
cnoreabbrev dacs Dacs
"h: local-additions

" teclado n funciona
:inoremap ¢ ()<left>

"==============================================================
" Plugins Config
"==============================================================

" gitgutter
" [c -> previous hunk   ]c -> next hunk
set updatetime=100 "atualização mais rápida de +-

" tagbar
map <bs> :Tagbar<cr>

"airline
let g:airline#extensions#ale#enabled = 1

" ultisnips
" custom
let g:UltiSnipsSnippetDirectories=[$HOME.'/.vim/UltiSnips']
let g:UltiSnipsSnippetsDir="~/.vim/UltiSnips"

"==============================================================
" Overwriting .vimrc
"==============================================================

" permitir syntastic com go
"let g:syntastic_mode_map = { 'mode': 'active' }

"######################################################
"# File browsing
"######################################################
" - :edit a folder to open a file browser
" - <CR>/v/t to open in an h-split/v-split/tab
" - check |netrw-browse-maps| for more mappings
let g:netrw_banner=0        " disable annoying banner
let g:netrw_browse_split=4  " open in prior window
let g:netrw_altv=1          " open splits to the right
let g:netrw_liststyle=3     " tree view

" toggle para mostrar diretórios
let g:tnet = 1
fun! ToggleGerenciador()
    if(g:tnet==1)
        :vs
        :edit .
        let g:tnet = 0
    else
        :q!
        let g:tnet = 1
    endif
endfun

nnoremap <space> :call ToggleGerenciador()<cr>
